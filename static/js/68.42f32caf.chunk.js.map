{"version":3,"file":"static/js/68.42f32caf.chunk.js","mappings":"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","sources":["components/API.js","webpack://react-homework-template/./src/components/Loader/Loader.module.css?d03f","components/Loader/Loader.js","webpack://react-homework-template/./src/components/SearchBar/SearchBar.module.css?35a0","components/SearchBar/SearchBar.js","webpack://react-homework-template/./src/components/SearchMoviesList/SearchMoviesList.module.css?41bb","components/SearchMoviesList/SearchMoviesList.js","pages/Movies.jsx","webpack://react-homework-template/./src/pages/PagesStyles.module.css?5d57"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL='https://api.themoviedb.org/3';\nconst KEY = \"53e87cb9c08783511c6675cb8902a46b\";\n\n\nexport const fetchPopularMovies = async () => {\n  const popularMoviesList = axios.get(`${BASE_URL}/trending/all/day?api_key=${KEY}`);\n    \n  console.log('popularMoviesList in fetchPopularMovies',popularMoviesList);\n\n  return popularMoviesList;\n}\n\nexport const fetchMovieDetails = async (movieId) => {\n  const movieDetails = axios.get(`${BASE_URL}/movie/${movieId}?api_key=${KEY}`);\n\n  console.log('movieDetails in fetchMovieDetails:',movieDetails);\n\n  return movieDetails;\n}\n\nexport const fetchCast = async (movieId) => {\n  const castData = axios.get(`${BASE_URL}/movie/${movieId}/credits?api_key=${KEY}`);\n\n  console.log('castData in fetchCast :', castData);\n\n  return castData;\n}\n\n\nexport const fetchReviews = async (movieId) => {\n  const movieReviews = axios.get(`${BASE_URL}/movie/${movieId}/reviews?api_key=${KEY}`);\n\n  console.log('movieReviews in fetchReviews', movieReviews);\n\n  return movieReviews;\n}\n\nexport const searchMovies = async (query) => {\n  const searchMovieList = axios.get(`${BASE_URL}/search/movie?api_key=${KEY}&query=${query}`);\n\n  console.log(searchMovieList);\n\n  return searchMovieList;\n}","// extracted by mini-css-extract-plugin\nexport default {\"spinner\":\"Loader_spinner__iDFIv\"};","import React from \"react\";\nimport css from \"./Loader.module.css\";\nimport { Circles } from 'react-loader-spinner'\n  <Circles\n    height=\"10\"\n    width=\"10\"\n    color=\"#4fa94d\"\n    ariaLabel=\"circles-loading\"\n    wrapperStyle={{}}\n    wrapperClass=\"\"\n    visible={true}\n  />;\n\n  const Loader = () => {\n    return (\n      <div className={css.spinner}> <Circles/> <Circles/> <Circles/></div>\n    )\n  };\n\n  export default Loader;","// extracted by mini-css-extract-plugin\nexport default {\"SearchBar\":\"SearchBar_SearchBar__MQiwu\",\"SearchForm\":\"SearchBar_SearchForm__J+i1a\",\"SearchFormButton\":\"SearchBar_SearchFormButton__J-w2N\",\"SearchFormInput\":\"SearchBar_SearchFormInput__4T9IM\"};","import {useState} from \"react\";\nimport PropTypes from \"prop-types\";\nimport css from \"./SearchBar.module.css\";\n\nconst SearchBar = ({onSubmit}) => {\n  const [query, setQuery] = useState('');\n\n  const handleChange = event => {\n    const { value } = event.currentTarget;\n    setQuery(value);\n  }  \n  \n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (query.trim() === '') {\n      return alert ('Enter query to search');\n    }\n\n    onSubmit(query); \n    setQuery('');\n  }\n\n  return (\n    <header className={css.SearchBar}>\n      <form className={css.SearchForm} onSubmit={handleSubmit}>\n        <input\n          className={css.SearchFormInput}\n          type=\"text\"\n          name=\"query\"\n          value={query}\n          onChange={handleChange}\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search movie\"\n        />\n        <button type=\"submit\" className={css.SearchFormButton}>Search</button>\n      </form>\n    </header>\n  ) \n}\n\nSearchBar.propTypes = {\n  onSubmit: PropTypes.func.isRequired\n};\n\nexport default SearchBar;","// extracted by mini-css-extract-plugin\nexport default {\"movieList\":\"SearchMoviesList_movieList__XURjx\",\"movieListItem\":\"SearchMoviesList_movieListItem__7N6T4\",\"movieTitle\":\"SearchMoviesList_movieTitle__tn7--\"};","import { NavLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport css from './SearchMoviesList.module.css';\n\nconst SearchMoviesList = ({ moviesList }) => {\n\n  return (\n    <ul className={css.movieList}>\n      {moviesList.map( movie => (\n        <li key={movie.id} className={css.movieListItem}>\n          <NavLink to={`${movie.id}`} \n          className={css.movieTitle}> {movie.title || movie.name} </NavLink>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nSearchMoviesList.propTypes = {\n  moviesList: PropTypes.arrayOf(\n    PropTypes.object),\n};\n\nexport default SearchMoviesList;","\nimport { useState, useEffect } from \"react\";\nimport { useSearchParams } from \"react-router-dom\";\nimport { searchMovies } from '../components/API';\nimport SearchBar from \"components/SearchBar\";\nimport Loader from \"components/Loader\";\nimport SearchMoviesList from \"components/SearchMoviesList\";\nimport css from './PagesStyles.module.css';\n\nconst Movies = () =>{\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [movieList, setMovieList] = useState([]);\n\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  useEffect( () => { \n\n    const query= searchParams.get('query'); \n    // console.log(query);\n    if ( !query ) {\n      console.log('There is no query in searchParams');\n      return\n    };\n    \n    const getSearchList = async () => {\n      // console.log('query inside getSearchList before try:', query);\n      try {\n        setLoading(true);\n\n        const response = await searchMovies(query);\n        console.log('response.data in Movies :' , response.data);\n\n        if ( response.data.total_results === 0 ) {\n          return <p>There are no movies by query ${query}</p>;\n        }\n\n        if ( response.data.total_results > 0 ) {\n          setMovieList(response.data.results);\n        } \n        else {\n          return Promise.reject(new Error(`There are no movies by query ${query}`));\n        }\n      }\n      catch(error) { \n        setError(error);\n      }\n      finally { setLoading(false) };\n    }\n    getSearchList();\n\n    }, [searchParams] \n  );\n\n  const handleSubmit = (query) => {\n    setMovieList( [] );\n    setSearchParams( {query} );\n    console.log({query});\n  } \n\n  return (\n    <>\n      <SearchBar onSubmit={handleSubmit}/>\n\n      { error && <h1 className={css.errorMessage}> Something wrong. Try to reload this page.</h1> }\n      { loading && <Loader/> }\n\n      <SearchMoviesList moviesList={movieList} />\n    </>\n  );\n};\n\nexport default Movies;\n","// extracted by mini-css-extract-plugin\nexport default {\"HomeContainer\":\"PagesStyles_HomeContainer__+IvPR\",\"movieListTitle\":\"PagesStyles_movieListTitle__iaPQ0\",\"backLink\":\"PagesStyles_backLink__NKpyO\",\"errorMessage\":\"PagesStyles_errorMessage__6EqW5\"};"],"names":["BASE_URL","KEY","fetchPopularMovies","popularMoviesList","axios","console","log","fetchMovieDetails","movieId","movieDetails","fetchCast","castData","fetchReviews","movieReviews","searchMovies","query","searchMovieList","className","css","onSubmit","useState","setQuery","event","preventDefault","trim","alert","type","name","value","onChange","currentTarget","autoComplete","autoFocus","placeholder","moviesList","map","movie","to","id","title","loading","setLoading","error","setError","movieList","setMovieList","useSearchParams","searchParams","setSearchParams","useEffect","get","getSearchList","response","data","total_results","results","Promise","reject","Error","Loader"],"sourceRoot":""}