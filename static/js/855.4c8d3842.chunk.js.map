{"version":3,"file":"static/js/855.4c8d3842.chunk.js","mappings":"kTAEMA,EAAS,+BACTC,EAAM,mCAGCC,EAAkB,mCAAG,2FAC1BC,EAAoBC,EAAAA,EAAAA,IAAA,UAAaJ,EAAb,qCAAkDC,IAE5EI,QAAQC,IAAI,0CAA0CH,GAHtB,kBAKzBA,GALyB,2CAAH,qDAQlBI,EAAiB,mCAAG,WAAOC,GAAP,8EACzBC,EAAeL,EAAAA,EAAAA,IAAA,UAAaJ,EAAb,kBAA+BQ,EAA/B,oBAAkDP,IAEvEI,QAAQC,IAAI,qCAAqCG,GAHlB,kBAKxBA,GALwB,2CAAH,sDAQjBC,EAAS,mCAAG,WAAOF,GAAP,8EACjBG,EAAWP,EAAAA,EAAAA,IAAA,UAAaJ,EAAb,kBAA+BQ,EAA/B,4BAA0DP,IAE3EI,QAAQC,IAAI,0BAA2BK,GAHhB,kBAKhBA,GALgB,2CAAH,sDASTC,EAAY,mCAAG,WAAOJ,GAAP,8EACpBK,EAAeT,EAAAA,EAAAA,IAAA,UAAaJ,EAAb,kBAA+BQ,EAA/B,4BAA0DP,IAE/EI,QAAQC,IAAI,+BAAgCO,GAHlB,kBAKnBA,GALmB,2CAAH,sDAQZC,EAAY,mCAAG,WAAOC,GAAP,8EACpBC,EAAkBZ,EAAAA,EAAAA,IAAA,UAAaJ,EAAb,iCAA8CC,EAA9C,kBAA2Dc,IAEnFV,QAAQC,IAAIU,GAHc,kBAKnBA,GALmB,2CAAH,qD,sJCtCzB,EAAgC,4BAAhC,EAA2E,2BAA3E,EAA8G,oBAA9G,EAA+I,yBAA/I,EAAoL,wB,SCoEpL,EA7Da,WAAO,IAAD,EACjB,GAA0BC,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KAEA,GAAgCF,EAAAA,EAAAA,UAAS,CAAC,GAA1C,eAAON,EAAP,KAAiBS,EAAjB,KAEMC,GAASC,EAAAA,EAAAA,MA8Bf,OA7BAjB,QAAQC,IAAI,UAAWe,IAEvBE,EAAAA,EAAAA,YAAW,WACT,IAAMC,EAAO,mCAAG,8GAIWd,EAAAA,EAAAA,GAAUW,EAAOb,SAJ5B,UAINiB,EAJM,OAMZpB,QAAQC,IAAI,2BAA4BmB,EAASC,MAE3CD,EARM,uBASVE,QAAQC,OAAO,IAAIC,MAAJ,8CATL,mBAUH,sEAVG,OAaZT,EAAYK,EAASC,MAbT,kDAgBZP,EAAS,EAAD,IAhBI,8GAAH,qDAsBbK,GACD,GAAE,CAACH,EAAOb,WAKX,2BACIU,IAAS,eAAIY,UAAWC,EAAf,yDAGX,gBAAKD,UAAWC,EAAhB,UACI,+BACCpB,QADD,IACCA,GADD,UACCA,EAAUqB,YADX,aACC,EAAgBC,KAAK,SAAAC,GAAK,OACzB,gBAAwBJ,UAAWC,EAAnC,WACI,gBAAKI,IAAMD,EAAME,aAAN,yCAAuDF,EAAME,cAAiBC,EACvFC,IAAG,GACHR,UAAWC,KACb,cAAGD,UAAWC,EAAd,SAA8BG,EAAMK,QACpC,eAAGT,UAAWC,EAAd,wBAAyCG,EAAMM,eAL1CN,EAAMO,QADU,UAclC,C","sources":["components/API.js","webpack://react-homework-template/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.js"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL='https://api.themoviedb.org/3';\nconst KEY = \"53e87cb9c08783511c6675cb8902a46b\";\n\n\nexport const fetchPopularMovies = async () => {\n  const popularMoviesList = axios.get(`${BASE_URL}/trending/all/day?api_key=${KEY}`);\n    \n  console.log('popularMoviesList in fetchPopularMovies',popularMoviesList);\n\n  return popularMoviesList;\n}\n\nexport const fetchMovieDetails = async (movieId) => {\n  const movieDetails = axios.get(`${BASE_URL}/movie/${movieId}?api_key=${KEY}`);\n\n  console.log('movieDetails in fetchMovieDetails:',movieDetails);\n\n  return movieDetails;\n}\n\nexport const fetchCast = async (movieId) => {\n  const castData = axios.get(`${BASE_URL}/movie/${movieId}/credits?api_key=${KEY}`);\n\n  console.log('castData in fetchCast :', castData);\n\n  return castData;\n}\n\n\nexport const fetchReviews = async (movieId) => {\n  const movieReviews = axios.get(`${BASE_URL}/movie/${movieId}/reviews?api_key=${KEY}`);\n\n  console.log('movieReviews in fetchReviews', movieReviews);\n\n  return movieReviews;\n}\n\nexport const searchMovies = async (query) => {\n  const searchMovieList = axios.get(`${BASE_URL}/search/movie?api_key=${KEY}&query=${query}`);\n\n  console.log(searchMovieList);\n\n  return searchMovieList;\n}","// extracted by mini-css-extract-plugin\nexport default {\"castContainer\":\"Cast_castContainer__NIXqj\",\"errorMessage\":\"Cast_errorMessage__vYxsC\",\"actor\":\"Cast_actor__tWtXy\",\"actorPhoto\":\"Cast_actorPhoto__kVLWr\",\"actorInfo\":\"Cast_actorInfo__8ZWx-\"};","import { useState, useEffect } from 'react';\nimport { fetchCast } from 'components/API';\nimport { useParams } from 'react-router-dom';\n// import Loader from 'components/Loader';\nimport NoCastPhoto from 'images/bunny.jpg';\nimport css from './Cast.module.css';\n\n\nconst Cast = () => {\n  const [error, setError] = useState(null);\n  // const [loading, setLoading] = useState(false);\n  const [castData, setCastData] = useState({});\n\n  const params = useParams();\n  console.log('params:', params);\n\n  useEffect( () => {\n    const getCast = async () => {\n      try {\n        // setLoading(true);\n\n        const response = await fetchCast(params.movieId);\n\n        console.log('response.data in Cast : ', response.data);\n\n        if ( !response ) {\n          Promise.reject(new Error(`Something wrong. Try to reload this page.`));\n          return <p>Something wrong. Try to reload this page.</p>;\n        }\n\n        setCastData(response.data);//??\n      }\n      catch(error) { \n        setError(error);\n      }\n      finally { \n        // setLoading(false) \n      };\n    }\n    getCast();\n  }, [params.movieId]\n  );\n\n  return (\n\n  <div>\n    { error && <h1 className={css.errorMessage}> Something wrong. Try to reload this page.</h1> }\n    {/* { loading && <Loader/>} */}\n\n    <div className={css.castContainer}> \n        <ul>\n        {castData?.cast?.map( actor  =>\n          <li key={actor.cast_id} className={css.actor}>\n              <img src={ actor.profile_path ? `https://image.tmdb.org/t/p/w500${actor.profile_path}` : NoCastPhoto}\n                alt={``} \n                className={css.actorPhoto}/>\n              <p className={css.actorInfo}>{actor.name}</p>\n              <p className={css.actorInfo}>Character: {actor.character}</p>\n          </li>\n          )}\n        </ul>  \n    </div>\n  </div>\n  \n  );\n};\n\nexport {Cast};\n\nexport default Cast;"],"names":["BASE_URL","KEY","fetchPopularMovies","popularMoviesList","axios","console","log","fetchMovieDetails","movieId","movieDetails","fetchCast","castData","fetchReviews","movieReviews","searchMovies","query","searchMovieList","useState","error","setError","setCastData","params","useParams","useEffect","getCast","response","data","Promise","reject","Error","className","css","cast","map","actor","src","profile_path","NoCastPhoto","alt","name","character","cast_id"],"sourceRoot":""}